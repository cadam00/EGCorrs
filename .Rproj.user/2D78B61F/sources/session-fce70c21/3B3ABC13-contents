# library(osmdata)
# library(rnaturalearth)
# library(rnaturalearthdata)
library(ggplot2)
# library(RANN)
library(igraph)
# library(reshape2)
library(sfnetworks)
# library(Rcppgreedy)
# library(spatstat)
library(sf)
library(tmap)
tmap_mode("view")
library(terra)
# library(httr2)
# library(ncdf4)
library(stars)
# library(lubridate)
# library(leaflet)
# library(leaflet.extras2)
# library(dplyr)

########################################################
#https://www.eea.europa.eu/en/datahub/datahubitem-view/6fc8ad2d-195d-40f4-bdec-576e7d1268e4

setwd("C:/Users/Administrator/Desktop/test_analysis/corridors/corridors_chr")
NATURA <- st_read("Natura/natura_WGS84.shp")
merged_Med <- st_read("examined_area.shp")

normalize_weights<-TRUE
remove_parts<-"NO"

# Origin shapefiles (could be a single one shapefile)
start_code<- "GR3000019"
start_area<-NATURA[NATURA[,1][[1]]==start_code,]

start_code_2<-"GR4220005"
start_area_2<-NATURA[NATURA[,1][[1]]==start_code_2,]

start_code_3<-"GR4210021"
start_area_3<-NATURA[NATURA[,1][[1]]==start_code_3,]

start_code_4<-"GR4210026"
start_area_4<-NATURA[NATURA[,1][[1]]==start_code_4,]

# Destination shapefile
end_code<-"GR4320006"
end_area<-NATURA[NATURA[,1][[1]]==end_code,]

rm(NATURA) #we delete it from memory because its very heavy


#https://data.marine.copernicus.eu/product/MEDSEA_ANALYSISFORECAST_PHY_006_013/description
nc_data <- read_stars("currents.nc")

currents_xy <- nc_data[,,,1, drop = TRUE]

cost_raster_input_x <- rast(currents_xy[1])
crs(cost_raster_input_x) <- st_crs(merged_Med)$wkt
cost_raster_yes_x <- crop(cost_raster_input_x, st_bbox(merged_Med)[c(1,3,2,4)], mask=TRUE)

cost_raster_input_y <- rast(currents_xy[2])
crs(cost_raster_input_y) <- st_crs(merged_Med)$wkt
cost_raster_yes_y <- crop(cost_raster_input_y, st_bbox(merged_Med)[c(1,3,2,4)], mask=TRUE)

rm(nc_data) #we delete it from memory because its very heavy
rm(currents_xy) #we delete it from memory because its very heavy

end_areas <- end_area
origin_areas <- rbind(start_area, start_area_2, start_area_3, start_area_4)

###########################################
source("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory.R")
source("C:/Users/Administrator/Documents/packages/SeaGames/R/sea_game_theory.R")

npoints <- 4
mask_shapefile <- NULL
k_neighbors <- 7
nearest_grid_nodes <- 4
niters      <- 5
lambda      <- 1
component_u <- cost_raster_yes_x
component_v <- cost_raster_yes_y
end_areas   <- end_area
origin_areas <- rbind(start_area, start_area_2, start_area_3, start_area_4)
all_networks <- FALSE

# for (lambda in c(1e-6, 1, 1e+6)){
  set.seed(42)

  out <- SeaGames(component_u, component_v, origin_areas, end_areas,
                  npoints = npoints, lambda = lambda, niters = niters,
                  k_neighbors = k_neighbors,
                  nearest_grid_nodes = nearest_grid_nodes,
                  mask_shapefile = mask_shapefile, all_networks = TRUE)

  saveRDS(out, paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l",
  "_lambda", lambda, "_npoints", npoints, "_niters", niters,
  ".rds"))

  solution_edges <- out$solution_edges
  result_edges   <- st_as_sf(out$net_result_congestion, "edges")

  # tm_shape(result_edges)+
  #   tm_lines(col = "black",alpha = 0.05)+
  #   tm_shape(solution_edges) +
  #   tm_lines(col = "u_l",lwd="u_l", scale=10,
  #            palette=colorRampPalette(c("blue", "red"))(10), n=10)
  #
  # SeaGraphs::flows_sfn(solution_edges)

  names(solution_edges)[6] <- "uₗ"

  tmap_save(tm = tm_shape(result_edges)+
              tm_lines(col = "black",alpha = 0.05) +
              # tm_shape(out$origin_points) + tm_dots(col="#4B0092") +
              # tm_shape(out$destination_points) + tm_dots(col="#1AFF1A") +
              tm_shape(solution_edges) +
              tm_lines(col = "uₗ",lwd="uₗ", scale=10,
                       palette=colorRampPalette(c("blue", "red"))(10), n=10),
            filename = paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l",
                              "_lambda", lambda, "_npoints", npoints, "_niters", niters,
                              ".html")
  )

  webshot::webshot(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l",
                          "_lambda", lambda, "_npoints", npoints, "_niters", niters,
                          ".html"),
                   file=paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l",
                               "_lambda", lambda, "_npoints", npoints, "_niters", niters,
                               ".png"), delay=2, vheight=947, vwidth=1920)



  htmlwidgets::saveWidget(SeaGraphs::flows_sfn(solution_edges),
                          file=paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/arrows_",
                                      "_lambda", lambda, "_npoints", npoints, "_niters", niters, ".html"))

  webshot::webshot(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/arrows_",
                          "_lambda", lambda, "_npoints", npoints, "_niters", niters,
                          ".html"),
                   file=paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/arrows_",
                               "_lambda", lambda, "_npoints", npoints, "_niters", niters,
                               ".png"), delay=2, vheight=947, vwidth=1920)

  png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/rmse_u_l_perc",
             "_lambda", lambda, "_npoints", npoints, "_niters", niters,
             ".png"), width = 630, height = 670)
  ggplot(out$metrics_df[-1,], aes(x = niters, y = rmse_u_l_perc)) +
    geom_point() +              # Add points
    geom_line() +               # Add line connecting points
    theme_minimal() +           # Use a minimal theme
    labs(title = bquote("RMSE of" ~ u[l] ~ "%" ~ ", " ~ lambda == .(lambda)),
         x = "Number of iterations",
         y = "RMSE")              # Add labels
  dev.off()

  png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/rmse_c_l",
             "_lambda", lambda, "_npoints", npoints, "_niters", niters,
             ".png"), width = 630, height = 670)
  ggplot(out$metrics_df[-1,], aes(x = niters, y = rmse_c_l)) +
    geom_point() +              # Add points
    geom_line() +               # Add line connecting points
    theme_minimal() +           # Use a minimal theme
    labs(title = bquote("RMSE of" ~ c[l] ~ ", " ~ lambda == .(lambda)),
         x = "Number of iterations",
         y = "RMSE")              # Add labels
  dev.off()

  png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/rmse_u_l_perc_times_c_l",
             "_lambda", lambda, "_npoints", npoints, "_niters", niters,
             ".png"), width = 630, height = 670)
  ggplot(out$metrics_df[-1,], aes(x = niters, y = rmse_u_l_perc_times_c_l)) +
    geom_point() +              # Add points
    geom_line() +               # Add line connecting points
    theme_minimal() +           # Use a minimal theme
    labs(title = bquote("RMSE of" ~ c[l] ~ "*" ~ u[l] ~ "%" ~ ", " ~ lambda == .(lambda)),
         x = "Number of iterations",
         y = "RMSE")              # Add labels
  dev.off()

  png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/sum_c_l",
             "_lambda", lambda, "_npoints", npoints, "_niters", niters,
             ".png"), width = 630, height = 670)
  ggplot(out$metrics_df, aes(x = niters, y = sum_c_l)) +
    geom_point() +              # Add points
    geom_line() +               # Add line connecting points
    theme_minimal() +           # Use a minimal theme
    labs(title = bquote(Sigma ~ c[l] ~ ", " ~ lambda == .(lambda)),
         x = "Number of iterations",
         y = "")              # Add labels
  dev.off()
# }


# png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/sum_demeaned_c_l",
#            "_lambda", lambda, "_npoints", npoints, "_niters", niters,
#            ".png"), width = 630, height = 670)
# ggplot(out$metrics_df, aes(x = niters, y = sum_demeaned_c_l)) +
#   geom_point() +              # Add points
#   geom_line() +               # Add line connecting points
#   theme_minimal() +           # Use a minimal theme
#   labs(title = bquote( Sigma ~ (c[l] - bar(c[l]) ) ~ ", " ~ lambda == .(lambda)),
#        x = "Number of iterations",
#        y = "")              # Add labels
# dev.off()
#
# png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/sum_c_l_minus_global_mean",
#            "_lambda", lambda, "_npoints", npoints, "_niters", niters,
#            ".png"), width = 630, height = 670)
# ggplot(out$metrics_df, aes(x = niters, y = sum_c_l_minus_global_mean)) +
#   geom_point() +              # Add points
#   geom_line() +               # Add line connecting points
#   theme_minimal() +           # Use a minimal theme
#   labs(title = bquote(Sigma ~ ( c[l] - ~ "global" ~ bar(c[l]) ) ~ ", " ~ lambda == .(lambda)),
#        x = "Number of iterations",
#        y = "")              # Add labels
# dev.off()


## Gif
globalmax <- max(sapply(out$list_of_networks, function(x)max(st_as_sf(x, "edges")$u_l_perc, na.rm=TRUE)), na.rm=TRUE)
breaks    <- seq(0, globalmax, length.out=10)
iters_plot <- c(1, seq(from=50, to=niters, by=50))#seq(from=1, to=niters, by=9)

filenames_html <- paste0(
  "C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/pngs/",
  "u_l_perc_", iters_plot, ".html"
)

filenames_png <- paste0(
  "C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/pngs/",
  "u_l_perc_", iters_plot, ".png"
)

library(doParallel)
cl <- makePSOCKcluster(detectCores())
registerDoParallel(cl)

foreach(i=seq_along(iters_plot), .packages=c("sf", "tmap", "sfnetworks")) %dopar%{

  solution_edges <- st_as_sf(out$list_of_networks[[iters_plot[i]]], "edges")
  result_edges   <- st_as_sf(out$list_of_networks[[iters_plot[i]]], "edges")[,"weight"]

  tmap_save(tm = tm_shape(result_edges)+
            tm_lines(col = "black",alpha = 0.05)+
            tm_shape(solution_edges) +
            tm_lines(col = "u_l_perc",lwd="u_l_perc", scale=10,
                     palette=colorRampPalette(c("blue", "red"))(10), n=10,
                     breaks=breaks) +
              tm_layout(paste0("Iter = ",iters_plot[i])),
            filename = filenames_html[i]
  )

  webshot::webshot(filenames_html[i], file=filenames_png[i], delay=2)

}
stopCluster(cl)
gc()

gifski::gifski(filenames_png,
       gif_file = "C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/pngs/animation.gif",
       width = 800, height = 600, delay = 0.5)

######################################
out10m6 <- readRDS("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l_lambda1e-06_npoints120_niters500.rds")
out1    <- readRDS("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l_lambda1_npoints120_niters500.rds")
out10p6 <- readRDS("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l_lambda1e+06_npoints120_niters500.rds")

combined_out_u_l_perc <- data.frame(rmse_u_l_perc = c(out10m6$metrics_df$rmse_u_l_perc[-1],
                                                      out1$metrics_df$rmse_u_l_perc[-1],
                                                      out10p6$metrics_df$rmse_u_l_perc[-1]),
                                    lambda        = c(rep(c(1e-6, 1, 1e+6),
                                                            each = length(out10m6$metrics_df$rmse_u_l_perc)-1)),
                                    niters        = out1$metrics_df$niters[-1])

png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/combined_out_u_l_perc",
           "_lambda", lambda, "_npoints", npoints, "_niters", niters,
           ".png"), width = 630, height = 670)
ggplot(combined_out_u_l_perc, aes(x = niters, y = rmse_u_l_perc)) +
  geom_point() +              # Add points
  geom_line() +               # Add line connecting points
  theme_bw() +           # Use a minimal theme
  labs(title = "",
       x = "Number of iterations",
       y = bquote(lambda)) +              # Add labels
facet_grid(lambda ~ ., scales = "free_y",
           switch = "y") +
  theme(strip.placement = "outside")
dev.off()

# Alternatively, all on the same plot
# png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/combined_out_u_l_perc",
#            "_npoints", 120, "_niters", 500,
#            ".png"), width = 630, height = 670)

tikzDevice::tikz(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/combined_out_u_l_perc",
                         "_npoints", 120, "_niters", 500,
                         ".tex"), width = 5, height=4)
ggplot(combined_out_u_l_perc, aes(x = niters, y = rmse_u_l_perc, group=lambda, colour = as.factor(lambda))) +
  geom_point() +              # Add points
  geom_line() +               # Add line connecting points
  theme_bw() +           # Use a minimal theme
  labs(title = "",
       x = "Number of iterations",
       y = "",
       colour = "$\\lambda$") +
  scale_color_manual(values = c("#648FFF", "#FE6100", "#FFB000")) +
  theme(text = element_text(size = 20))
dev.off()
####################################################
out20   <- readRDS("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l_lambda1_npoints120_niters20.rds")
out2000 <- readRDS("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/u_l_lambda1_npoints120_niters2000.rds")

combined_out_u_l_perc <- data.frame(rmse_u_l_perc = c(out20$metrics_df$rmse_u_l_perc[-1],
                                                      out2000$metrics_df$rmse_u_l_perc[-1]),
                                    iter          = c(rep(20,each = length(out20$metrics_df$rmse_u_l_perc)-1),
                                                      rep(2000,each = length(out2000$metrics_df$rmse_u_l_perc)-1)),
                                    niters        = c(out20$metrics_df$niters[-1],out2000$metrics_df$niters[-1]))

library(ggh4x)

# png(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/combined_out_u_l_perc20_2000.png"), width = 630, height = 670)
tikzDevice::tikz(paste0("C:/Users/Administrator/Desktop/test_analysis/corridors/sea_game_theory_data/combined_out_u_l_perc20_2000.tex"), width = 5, height=4)
ggplot(combined_out_u_l_perc, aes(x = niters, y = rmse_u_l_perc)) +
  geom_point() +              # Add points
  geom_line() +               # Add line connecting points
  theme_bw() +           # Use a minimal theme
  labs(title = "",
       x = "Number of iterations",
       y = "Iterations") +              # Add labels
  facet_grid2(iter ~ ., scales = "free",independent = "x",
             switch = "y") +
  theme(strip.placement = "outside",
        text = element_text(size = 20))
dev.off()

