# library(osmdata)
# library(rnaturalearth)
# library(rnaturalearthdata)
library(ggplot2)
# library(RANN)
library(igraph)
# library(reshape2)
library(sfnetworks)
# library(Rcppgreedy)
# library(spatstat)
library(sf)
library(tmap)
tmap_mode("view")
library(terra)
# library(httr2)
# library(ncdf4)
library(stars)
# library(lubridate)
# library(leaflet)
# library(leaflet.extras2)
# library(dplyr)

########################################################
#https://www.eea.europa.eu/en/datahub/datahubitem-view/6fc8ad2d-195d-40f4-bdec-576e7d1268e4

setwd("C:/Users/Administrator/Desktop/test_analysis/corridors/corridors_chr")
NATURA <- st_read("Natura/natura_WGS84.shp")
merged_Med <- st_read("examined_area.shp")

normalize_weights<-TRUE
remove_parts<-"NO"

# Origin shapefiles (could be a single one shapefile)
start_code<- "GR3000019"
start_area<-NATURA[NATURA[,1][[1]]==start_code,]

start_code_2<-"GR4220005"
start_area_2<-NATURA[NATURA[,1][[1]]==start_code_2,]

start_code_3<-"GR4210021"
start_area_3<-NATURA[NATURA[,1][[1]]==start_code_3,]

start_code_4<-"GR4210026"
start_area_4<-NATURA[NATURA[,1][[1]]==start_code_4,]

# Destination shapefile
end_code<-"GR4320006"
end_area<-NATURA[NATURA[,1][[1]]==end_code,]

rm(NATURA) #we delete it from memory because its very heavy


#https://data.marine.copernicus.eu/product/MEDSEA_ANALYSISFORECAST_PHY_006_013/description
nc_data <- read_stars("currents.nc")

currents_xy <- nc_data[,,,1, drop = TRUE]

cost_raster_input_x <- rast(currents_xy[1])
crs(cost_raster_input_x) <- st_crs(merged_Med)$wkt
cost_raster_yes_x <- crop(cost_raster_input_x, st_bbox(merged_Med)[c(1,3,2,4)], mask=TRUE)

cost_raster_input_y <- rast(currents_xy[2])
crs(cost_raster_input_y) <- st_crs(merged_Med)$wkt
cost_raster_yes_y <- crop(cost_raster_input_y, st_bbox(merged_Med)[c(1,3,2,4)], mask=TRUE)

rm(nc_data) #we delete it from memory because its very heavy
rm(currents_xy) #we delete it from memory because its very heavy

end_areas <- end_area
origin_areas <- rbind(start_area, start_area_2, start_area_3, start_area_4)


############################################
source("C:/Users/Administrator/Documents/packages/SeaGames/R/sea_game_theory.R")

npoints <- 10
mask_shapefile <- NULL
k_neighbors <- 7
nearest_grid_nodes <- 4
niters      <- 50
lambda      <- 1
component_u <- cost_raster_yes_x
component_v <- cost_raster_yes_y
destination_areas   <- start_area_2#end_area
origin_areas <- start_area#rbind(start_area, start_area_2, start_area_3, start_area_4)
all_networks <- FALSE
component_u <- crop(component_u, ext(rbind(origin_areas, destination_areas)))
component_v <- crop(component_v, ext(rbind(origin_areas, destination_areas)))

writeRaster(component_u, "C://Users//Administrator//Documents//packages//SeaGames//inst//external//component_u.tiff")
writeRaster(component_v, "C://Users//Administrator//Documents//packages//SeaGames//inst//external//component_v.tiff")

st_write(st_transform(st_geometry(origin_areas),crs(component_u)), "C://Users//Administrator//Documents//packages//SeaGames//inst//external//origin_areas//origin_areas.shp")
st_write(st_transform(st_geometry(destination_areas),crs(component_u)), "C://Users//Administrator//Documents//packages//SeaGames//inst//external//destination_areas//destination_areas.shp")

mask_shapefile <- st_as_sf(st_as_sfc(st_bbox(component_u), crs=crs(component_u)))
mask_shapefile <- st_crop(mask_shapefile, ext(mask_shapefile) / 1.5)


# for (lambda in c(1e-6, 1, 1e+6)){
set.seed(42)

tic <- Sys.time()
out <- SeaGames(component_u, component_v, origin_areas, destination_areas,
                npoints = npoints, lambda = lambda, niters = niters,
                k_neighbors = k_neighbors,
                nearest_grid_nodes = nearest_grid_nodes,
                mask_shapefile = NULL, all_networks = FALSE)
Sys.time() - tic
solution_edges <- out$solution_edges
result_edges   <- st_as_sf(out$net_result_congestion, "edges")

# tm_shape(result_edges)+
#   tm_lines(col = "black",alpha = 0.05)+
#   tm_shape(solution_edges) +
#   tm_lines(col = "u_l",lwd="u_l", scale=10,
#            palette=colorRampPalette(c("blue", "red"))(10), n=10)
#
# SeaGraphs::flows_sfn(solution_edges)

names(solution_edges)[6] <- "uₗ"

tm_shape(result_edges)+
  tm_lines(col = "black",alpha = 0.05) +
  tm_shape(solution_edges) +
  tm_lines(col = "uₗ",lwd="uₗ", scale=10,
           palette=colorRampPalette(c("blue", "red"))(10), n=10)+
  tm_shape(out$origin_points) + tm_dots(col="#1AFF1A", size=0.1) +
  tm_shape(out$destination_points) + tm_dots(col="#FFC20A", size=0.1) +
  tm_shape(mask_shapefile) +
  tm_polygons(fill="x") +
  tm_shape(st_geometry(origin_areas)) +
  tm_polygons(fill="x") +
  tm_shape(st_geometry(destination_areas)) +
  tm_polygons(fill="x")

