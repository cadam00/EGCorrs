[{"path":"https://cadam00.github.io/EGCorrs/articles/Introduction.html","id":"introduction-to-the-egcorrs-package-tutorial","dir":"Articles","previous_headings":"","what":"Introduction to the EGCorrs Package (tutorial)","title":"Introduction to EGCorrs","text":"Biodiversity conservation can substantially enhanced modeling species corridors based predicted behaviors. package, dynamic evolutionary congestion game formulated generate species corridors. primary advantage model lies utilization vector fields input layers, rendering particularly suitable simulating species distributions marine environments characterized current layers. population hypothetical agents transported origin destination space using directed weighted graph, agent’s utility maximized. equilibrium state reached numerous iterations, illustrating paths selected agents. Furthermore, congestion parameter incorporated represent tendency populations aggregate. Detailed presentation algorithm theoretical background done Nagkoulis et al. (forthcoming).","code":""},{"path":"https://cadam00.github.io/EGCorrs/articles/Introduction.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to EGCorrs","text":"Development version package can installed using:","code":"if (!require(remotes)) install.packages(\"remotes\") remotes::install_github(\"cadam00/EGCorrs\")"},{"path":"https://cadam00.github.io/EGCorrs/articles/Introduction.html","id":"illustration-example","dir":"Articles","previous_headings":"","what":"Illustration example","title":"Introduction to EGCorrs","text":"Packages required vignette listed imported : Currents information flow directions usually split horizontal (\\(u\\)) vertical (\\(v\\)) components, regarding horizontal vertical flow currents, respectively. example use cropped subset Aegean Sea site (Clementi et al., 2021) provided form SpatRaster elements. Figure 1 two directions components \\(u\\) \\(v\\) presented. can plotted using following:  Figure 1: Currents \\(u\\) (left) \\(v\\) (right) components. Figure 2 example one origin one destination area used, using subset NATURA 200 data (European Environment Agency, 2023) cropped area Aegean Sea utilized. illustration purposes, area around left island (Kythira) -neon green- considered origin area area around right island (Milos) -mikado yellow- destination area. Additional rows area added using rbind, indicating areas origin destination area taken consideration analysis.  Figure 2: Origin left (Kythira) -neon green- destination right (Milos) -mikado yellow. Therefore, horizontal vertical currents’ components, well origin destination areas, minimum spatial data requirements conducting analysis using EGCorrs package. Additional non-spatial arguments function used like number nearest neighbors (k_neighbors nearest_grid_nodes). one niters iterations, npoints agents added game, whose behavior affected setting parameter named lambda (\\(\\lambda\\)). final corridors origin/destination points produced algorithm can plotted using following:  Figure 3: Final solution algorithm. Stronger corridors origin left (Kythira) destination right (Milos) indicated red wider lines. origin random points neon green destination points mikado yellow. Convergence algorithm can seen using, example, following plot \\(RMSE(u_{l_{perc}})\\):  Figure 4: Convergence \\(RMSE(u_{l_{perc}})\\), representing convergence selected corridors algorithm.","code":"# Import packages library(EGCorrs) library(sf) ## Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE library(terra) ## terra 1.7.83 library(tmap) ## Breaking News: tmap 3.x is retiring. Please test v4, e.g. with ## remotes::install_github('r-tmap/tmap') tmap_mode(\"view\") ## tmap mode set to interactive viewing # Get example u and v components component_u <- get_component_u() component_v <- get_component_v()  # Plot each component par(mfrow=c(1,2), las=1) plot(component_u, main=\"u\") plot(component_v, main=\"v\") # Read origin area origin_areas      <- get_origin_areas() ## Reading layer `origin_areas' from data source  ##   `C:\\Program Files\\R\\R-4.4.2\\library\\EGCorrs\\external\\origin_areas\\origin_areas.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 1 feature and 1 field ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 22.86969 ymin: 36.04912 xmax: 23.13855 ymax: 36.39421 ## Geodetic CRS:  WGS 84 # Read destination area destination_areas <- get_destination_areas() ## Reading layer `destination_areas' from data source  ##   `C:\\Program Files\\R\\R-4.4.2\\library\\EGCorrs\\external\\destination_areas\\destination_areas.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 1 feature and 1 field ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 24.3053 ymin: 36.62173 xmax: 24.49323 ymax: 36.75966 ## Geodetic CRS:  WGS 84 # Plot both of them tm_shape(origin_areas) +   tm_polygons(col=\"#1AFF1A\") +   tm_shape(destination_areas) +   tm_polygons(col=\"#FFC20A\") set.seed(42) # Warnings are thrown because of reassuring that components u/v and # origin/destination areas are intersecting corridors <- EGCorrs(component_u       = component_u,                       component_v       = component_v,                       origin_areas      = origin_areas,                       destination_areas = destination_areas,                       npoints           = 10,                        niters            = 100) ## |================================================================================================| 100% ## Warning messages: ## 1: attribute variables are assumed to be spatially constant throughout all ## geometries ## 2: attribute variables are assumed to be spatially constant throughout all ## geometries names(corridors$solution_edges)[6] <- \"uₗ\"  tm_shape(st_as_sf(corridors$net_result_congestion, \"edges\"))+   tm_lines(col = \"black\",alpha = 0.05) +   tm_shape(corridors$solution_edges) +   tm_lines(col = \"uₗ\",lwd=\"uₗ\", scale=10,            palette=colorRampPalette(c(\"blue\", \"red\"))(10), n=10)+   tm_shape(corridors$origin_points) + tm_dots(col=\"#1AFF1A\", size=0.1) +   tm_shape(corridors$destination_points) + tm_dots(col=\"#FFC20A\", size=0.1) ## Legend for line widths not available in view mode. # Restore device to a single plot par(mfrow=c(1,1), las=1)  # Plot convergence of rmse_u_l_perc plot(x    = corridors$metrics_df$niters,      y    = corridors$metrics_df$rmse_u_l_perc,      main = expression(RMSE(u[l[perc]])),      xlab = \"Number of iterations\",      ylab = \"\",      lwd  = 2,      type = \"l\")"},{"path":"https://cadam00.github.io/EGCorrs/articles/Introduction.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to EGCorrs","text":"Clementi, E., Aydogdu, ., Goglio, . C., Pistoia, J., Escudier, R., Drudi, M., Grandi, ., Mariani, ., Lyubartsev, V., Lecci, R., Cretí, S., Coppini, G., Masina, S., & Pinardi, N. (2021). Mediterranean Sea Physical Analysis Forecast (CMEMS MED-Currents, EAS6 system) (Version 1) [Data set]. Copernicus Monitoring Environment Marine Service (CMEMS). https://doi.org/10.25423/CMCC/MEDSEA_ANALYSISFORECAST_PHY_006_013_EAS8. Last Access: 16/10/2024. European Environment Agency. (2023). Natura 2000 data - European network protected sites. European Environment Agency. Retrieved https://www.eea.europa.eu/en. Last Access: 16/10/2024. Nagkoulis N, Mazaris , Adam C, Katsanevakis S. (forthcoming). Evolutionary Game Theoretic Model Species Corridors Estimation.","code":""},{"path":"https://cadam00.github.io/EGCorrs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nikolaos Nagkoulis. Author. Antonios D. Mazaris. Author. Christos Adam. Author, maintainer. Stelios Katsanevakis. Author.","code":""},{"path":"https://cadam00.github.io/EGCorrs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nagkoulis N, Mazaris , Adam C, Katsanevakis S (2024). EGCorrs: Evolutionary Game Corridors. R package version 0.1.0, https://cadam00.github.io/EGCorrs/, https://github.com/cadam00/EGCorrs.","code":"@Manual{,   title = {EGCorrs: Evolutionary Game Corridors},   author = {Nikolaos Nagkoulis and Antonios D. Mazaris and Christos Adam and Stelios Katsanevakis},   year = {2024},   note = {R package version 0.1.0, https://cadam00.github.io/EGCorrs/},   url = {https://github.com/cadam00/EGCorrs}, }"},{"path":"https://cadam00.github.io/EGCorrs/index.html","id":"introduction-to-the-egcorrs-package-tutorial","dir":"","previous_headings":"","what":"Introduction to the EGCorrs Package (tutorial)","title":"Evolutionary Game Corridors","text":"Biodiversity conservation can substantially enhanced modeling species corridors based predicted behaviors. package, dynamic evolutionary congestion game formulated generate species corridors. primary advantage model lies utilization vector fields input layers, rendering particularly suitable simulating species distributions marine environments characterized current layers. population hypothetical agents transported origin destination space using directed weighted graph, agent’s utility maximized. equilibrium state reached numerous iterations, illustrating paths selected agents. Furthermore, congestion parameter incorporated represent tendency populations aggregate. Detailed presentation algorithm theoretical background done Nagkoulis et al. (forthcoming).","code":""},{"path":"https://cadam00.github.io/EGCorrs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Evolutionary Game Corridors","text":"Development version package can installed using:","code":"if (!require(remotes)) install.packages(\"remotes\") remotes::install_github(\"cadam00/EGCorrs\")"},{"path":"https://cadam00.github.io/EGCorrs/index.html","id":"illustration-example","dir":"","previous_headings":"","what":"Illustration example","title":"Evolutionary Game Corridors","text":"Packages required vignette listed imported : Currents information flow directions usually split horizontal (\\(u\\)) vertical (\\(v\\)) components, regarding horizontal vertical flow currents, respectively. example use cropped subset Aegean Sea site (Clementi et al., 2021) provided form SpatRaster elements. Figure 1 two directions components \\(u\\) \\(v\\) presented. can plotted using following:  Figure 1: Currents \\(u\\) (left) \\(v\\) (right) components. Figure 2 example one origin one destination area used, using subset NATURA 200 data (European Environment Agency, 2023) cropped area Aegean Sea utilized. illustration purposes, area around left island (Kythira) -neon green- considered origin area area around right island (Milos) -mikado yellow- destination area. Additional rows area added using rbind, indicating areas origin destination area taken consideration analysis.  Figure 2: Origin left (Kythira) -neon green- destination right (Milos) -mikado yellow. Therefore, horizontal vertical currents’ components, well origin destination areas, minimum spatial data requirements conducting analysis using EGCorrs package. Additional non-spatial arguments function used like number nearest neighbors (k_neighbors nearest_grid_nodes). one niters iterations, npoints agents added game, whose behavior affected setting parameter named lambda (\\(\\lambda\\)). final corridors origin/destination points produced algorithm can plotted using following:  Figure 3: Final solution algorithm. Stronger corridors origin left (Kythira) destination right (Milos) indicated red wider lines. origin random points neon green destination points mikado yellow. Convergence algorithm can seen using, example, following plot \\(RMSE(u_{l_{perc}})\\):  Figure 4: Convergence \\(RMSE(u_{l_{perc}})\\), representing convergence selected corridors algorithm.","code":"# Import packages library(EGCorrs) library(sf) ## Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE library(terra) ## terra 1.7.83 library(tmap) ## Breaking News: tmap 3.x is retiring. Please test v4, e.g. with ## remotes::install_github('r-tmap/tmap') tmap_mode(\"view\") ## tmap mode set to interactive viewing # Get example u and v components component_u <- get_component_u() component_v <- get_component_v()  # Plot each component par(mfrow=c(1,2), las=1) plot(component_u, main=\"u\") plot(component_v, main=\"v\") # Read origin area origin_areas      <- get_origin_areas() ## Reading layer `origin_areas' from data source ##   `C:\\Program Files\\R\\R-4.4.2\\library\\EGCorrs\\external\\origin_areas\\origin_areas.shp' ##   using driver `ESRI Shapefile' ## Simple feature collection with 1 feature and 1 field ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 22.86969 ymin: 36.04912 xmax: 23.13855 ymax: 36.39421 ## Geodetic CRS:  WGS 84 # Read destination area destination_areas <- get_destination_areas() ## Reading layer `destination_areas' from data source ##   `C:\\Program Files\\R\\R-4.4.2\\library\\EGCorrs\\external\\destination_areas\\destination_areas.shp' ##   using driver `ESRI Shapefile' ## Simple feature collection with 1 feature and 1 field ## Geometry type: POLYGON ## Dimension:     XY ## Bounding box:  xmin: 24.3053 ymin: 36.62173 xmax: 24.49323 ymax: 36.75966 ## Geodetic CRS:  WGS 84 # Plot both of them tm_shape(origin_areas) +   tm_polygons(col=\"#1AFF1A\") +   tm_shape(destination_areas) +   tm_polygons(col=\"#FFC20A\") set.seed(42) # Warnings are thrown because of reassuring that components u/v and # origin/destination areas are intersecting corridors <- EGCorrs(component_u       = component_u,                       component_v       = component_v,                       origin_areas      = origin_areas,                       destination_areas = destination_areas,                       npoints           = 10,                        niters            = 100) ## |================================================================================================| 100% ## Warning messages: ## 1: attribute variables are assumed to be spatially constant throughout all ## geometries ## 2: attribute variables are assumed to be spatially constant throughout all ## geometries names(corridors$solution_edges)[6] <- \"uₗ\"  tm_shape(st_as_sf(corridors$net_result_congestion, \"edges\"))+   tm_lines(col = \"black\",alpha = 0.05) +   tm_shape(corridors$solution_edges) +   tm_lines(col = \"uₗ\",lwd=\"uₗ\", scale=10,            palette=colorRampPalette(c(\"blue\", \"red\"))(10), n=10)+   tm_shape(corridors$origin_points) + tm_dots(col=\"#1AFF1A\", size=0.1) +   tm_shape(corridors$destination_points) + tm_dots(col=\"#FFC20A\", size=0.1) ## Legend for line widths not available in view mode. # Restore device to a single plot par(mfrow=c(1,1), las=1)  # Plot convergence of rmse_u_l_perc plot(x    = corridors$metrics_df$niters,      y    = corridors$metrics_df$rmse_u_l_perc,      main = expression(RMSE(u[l[perc]])),      xlab = \"Number of iterations\",      ylab = \"\",      lwd  = 2,      type = \"l\")"},{"path":"https://cadam00.github.io/EGCorrs/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Evolutionary Game Corridors","text":"Clementi, E., Aydogdu, ., Goglio, . C., Pistoia, J., Escudier, R., Drudi, M., Grandi, ., Mariani, ., Lyubartsev, V., Lecci, R., Cretí, S., Coppini, G., Masina, S., & Pinardi, N. (2021). Mediterranean Sea Physical Analysis Forecast (CMEMS MED-Currents, EAS6 system) (Version 1) [Data set]. Copernicus Monitoring Environment Marine Service (CMEMS). https://doi.org/10.25423/CMCC/MEDSEA_ANALYSISFORECAST_PHY_006_013_EAS8. Last Access: 16/10/2024. European Environment Agency. (2023). Natura 2000 data - European network protected sites. European Environment Agency. Retrieved https://www.eea.europa.eu/en. Last Access: 16/10/2024. Nagkoulis N, Mazaris , Adam C, Katsanevakis S. (forthcoming). Evolutionary Game Theoretic Model Species Corridors Estimation.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/EGCorrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Species Corridors Estimation — EGCorrs","title":"Species Corridors Estimation — EGCorrs","text":"Sea Currents Evolutionary Game Theoretic Model Species Corridors Estimation","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/EGCorrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species Corridors Estimation — EGCorrs","text":"","code":"EGCorrs(component_u, component_v, origin_areas, destination_areas,          npoints = 40L, lambda = 1, niters = 100L, k_neighbors = 7L,          nearest_grid_nodes = 4L, mask_shapefile = NULL, all_networks = FALSE,          progBar = TRUE)"},{"path":"https://cadam00.github.io/EGCorrs/reference/EGCorrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Species Corridors Estimation — EGCorrs","text":"component_u SpatRaster object horizontal direction. component_v SpatRaster object vertical direction. origin_areas sf object origin areas, POLYGON MULTIPOLYGON rows. destination_areas sf object destination areas, POLYGON MULTIPOLYGON rows. npoints integer object number random points origin destination areas. must positive. default 40L. lambda numeric object aggregation parameter \\(\\lambda\\). default value 1. niters integer object number points origin destination areas. must positive. default value 100L. k_neighbors integer object indicating number \\(k\\) nearest neighbors use components horizontal vertical directions. default value 7L nearest neighbors. nearest_grid_nodes integer object indicating number \\(k\\) nearest neighbors use random points inside origin destination areas. default value 4L nearest neighbors. mask_shapefile Optional sf SpatVector object masking component_u component_v SpatRaster objects. default value NULL, indicating mask performed. all_networks logical object indicating return sfnetwork per iteration. progBar logical object indicating whether print progress bar . default printing (progBar=TRUE).","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/EGCorrs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Species Corridors Estimation — EGCorrs","text":"Sea currents data input transformed weighted directed graph connectivity data. centroid component_u component_v considered separate graph node. Except points, random npoints random origin points generated inside origin_areas polygons/multipolygons npoints random destination points generated inside destination_areas polygons/multipolygons. points equally near equally distributed group points, way totally npoints random points contained inside origin_areas npoints random points contained inside destination_areas. directions produced points calculated, multiplied \\(\\lambda\\) finally minmax-scaled \\([0-1]\\). Thereafter, shortest paths origin destination points computed niters times, following evolutionary game theoretic model. Extent, resolution coordinate system must component_u component_v; otherwise error stops function's execution. case mismatches area two components origin_areas destination_areas, intersection areas components used instead areas. case mask_shapefile provided, internally assured resolution coordinates component_u warning prompted. Reproducibility results guranteed use base::set.seed using function.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/EGCorrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Species Corridors Estimation — EGCorrs","text":"SeaGraphs object, also list object containing following elements: solution_edges: sf object representing final edges solution niters iterations. net_result_congestion: sfnetwork object representing final solution niters iterations. row following items graph edge/link \\(l\\): : edge start graph vertex ID. : edge end graph vertex ID. c_l: value cost function \\(c_l\\). u_l: value utility \\(u_l\\). u_l_population: value utility compared total population game (\\(population = niters * npoints\\)). u_l_perc: value u_l_population normalized population current iteration (\\(u_{l_{_{perc}}}\\)). u_l_perc_times_c_l: u_l_perc * c_l. list_of_edges_freq: list object containing data.frame objects frequency shortest path corridors pass graph vertex, iteration. list_of_congestion: list object containing data.frame objects congenstion metrics per graph edge one niters iterations. row number indicating graph edge/link ID, according column link. columns net_result_congestion output. metrics_df: data.frame object summarization list_of_congestion values accross, : niters: number corresponding iteration. rmse_u_l_perc: \\(RMSE(u_{l_{_{perc}}})\\). rmse_u_l_perc_times_c_l: \\(RMSE(u_{l_{_{perc}}} * c_l)\\). rmse_c_l: \\(RMSE(c_l)\\). sum_c_l: \\(\\sum _l{c_l}\\). origin_points: sf POINT object representing origin points. destination_points: sf POINT object representing destination points. list_of_networks: all_networks = TRUE, list containing net_result_congestion item iteration. Else, NULL.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/EGCorrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Species Corridors Estimation — EGCorrs","text":"","code":"set.seed(42) component_u       <- get_component_u() component_v       <- get_component_v() origin_areas      <- get_origin_areas() #> Reading layer `origin_areas' from data source  #>   `/home/runner/work/_temp/Library/EGCorrs/external/origin_areas/origin_areas.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 1 feature and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 22.86969 ymin: 36.04912 xmax: 23.13855 ymax: 36.39421 #> Geodetic CRS:  WGS 84 destination_areas <- get_destination_areas() #> Reading layer `destination_areas' from data source  #>   `/home/runner/work/_temp/Library/EGCorrs/external/destination_areas/destination_areas.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 1 feature and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 24.3053 ymin: 36.62173 xmax: 24.49323 ymax: 36.75966 #> Geodetic CRS:  WGS 84 # Warnings are thrown because of reassuring that components u/v and # origin/destination areas are intersecting out               <- EGCorrs(component_u, component_v, origin_areas,                          destination_areas, npoints = 1,  niters = 10,                          progBar=FALSE) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries #> Warning: attribute variables are assumed to be spatially constant throughout all geometries ## Warning messages: ## 1: attribute variables are assumed to be spatially constant throughout all ## geometries ## 2: attribute variables are assumed to be spatially constant throughout all ## geometries"},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_u.html","id":null,"dir":"Reference","previous_headings":"","what":"Example component u — get_component_u","title":"Example component u — get_component_u","text":"Example horizontal direction raster.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_u.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example component u — get_component_u","text":"","code":"get_component_u()"},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_u.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example component u — get_component_u","text":"Example input component_u used functions. cropped area Aegean Sea.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_u.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example component u — get_component_u","text":"SpatRaster object.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_u.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example component u — get_component_u","text":"Clementi, E., Aydogdu, ., Goglio, . C., Pistoia, J., Escudier, R., Drudi, M., Grandi, ., Mariani, ., Lyubartsev, V., Lecci, R., Cretí, S., Coppini, G., Masina, S., & Pinardi, N. (2021). Mediterranean Sea Physical Analysis Forecast (CMEMS MED-Currents, EAS6 system) (Version 1) [Data set]. Copernicus Monitoring Environment Marine Service (CMEMS). doi:10.25423/CMCC/MEDSEA_ANALYSISFORECAST_PHY_006_013_EAS8 . Last Access: 16/10/2024.","code":""},{"path":[]},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_u.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example component u — get_component_u","text":"","code":"component_u <- get_component_u() terra::plot(component_u)"},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_v.html","id":null,"dir":"Reference","previous_headings":"","what":"Example component v — get_component_v","title":"Example component v — get_component_v","text":"Example horizontal direction raster.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_v.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example component v — get_component_v","text":"","code":"get_component_v()"},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_v.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example component v — get_component_v","text":"Example input component_v used functions. cropped area Aegean Sea.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_v.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example component v — get_component_v","text":"SpatRaster object.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_v.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example component v — get_component_v","text":"Clementi, E., Aydogdu, ., Goglio, . C., Pistoia, J., Escudier, R., Drudi, M., Grandi, ., Mariani, ., Lyubartsev, V., Lecci, R., Cretí, S., Coppini, G., Masina, S., & Pinardi, N. (2021). Mediterranean Sea Physical Analysis Forecast (CMEMS MED-Currents, EAS6 system) (Version 1) [Data set]. Copernicus Monitoring Environment Marine Service (CMEMS). doi:10.25423/CMCC/MEDSEA_ANALYSISFORECAST_PHY_006_013_EAS8 . Last Access: 16/10/2024.","code":""},{"path":[]},{"path":"https://cadam00.github.io/EGCorrs/reference/get_component_v.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example component v — get_component_v","text":"","code":"component_v <- get_component_v() terra::plot(component_v)"},{"path":"https://cadam00.github.io/EGCorrs/reference/get_destination_areas.html","id":null,"dir":"Reference","previous_headings":"","what":"Example mask shapefile — get_destination_areas","title":"Example mask shapefile — get_destination_areas","text":"Example mask shapefile.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_destination_areas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example mask shapefile — get_destination_areas","text":"","code":"get_destination_areas()"},{"path":"https://cadam00.github.io/EGCorrs/reference/get_destination_areas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example mask shapefile — get_destination_areas","text":"Example input destination_areas used functions. sample Natura 2000 areas.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_destination_areas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example mask shapefile — get_destination_areas","text":"sfc_MULTIPOLYGON sfc object.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_destination_areas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example mask shapefile — get_destination_areas","text":"European Environment Agency. (2023). Natura 2000 data - European network protected sites. European Environment Agency. Retrieved https://www.eea.europa.eu/en Last Access: 16/10/2024.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_destination_areas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example mask shapefile — get_destination_areas","text":"","code":"destination_areas <- get_destination_areas() #> Reading layer `destination_areas' from data source  #>   `/home/runner/work/_temp/Library/EGCorrs/external/destination_areas/destination_areas.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 1 feature and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 24.3053 ymin: 36.62173 xmax: 24.49323 ymax: 36.75966 #> Geodetic CRS:  WGS 84 plot(destination_areas)"},{"path":"https://cadam00.github.io/EGCorrs/reference/get_origin_areas.html","id":null,"dir":"Reference","previous_headings":"","what":"Example mask shapefile — get_origin_areas","title":"Example mask shapefile — get_origin_areas","text":"Example mask shapefile.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_origin_areas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example mask shapefile — get_origin_areas","text":"","code":"get_origin_areas()"},{"path":"https://cadam00.github.io/EGCorrs/reference/get_origin_areas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example mask shapefile — get_origin_areas","text":"Example input origin_areas used functions. sample Natura 2000 areas.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_origin_areas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example mask shapefile — get_origin_areas","text":"sfc_MULTIPOLYGON sfc object.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_origin_areas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example mask shapefile — get_origin_areas","text":"European Environment Agency. (2023). Natura 2000 data - European network protected sites. European Environment Agency. Retrieved https://www.eea.europa.eu/en Last Access: 16/10/2024.","code":""},{"path":"https://cadam00.github.io/EGCorrs/reference/get_origin_areas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example mask shapefile — get_origin_areas","text":"","code":"origin_areas <- get_origin_areas() #> Reading layer `origin_areas' from data source  #>   `/home/runner/work/_temp/Library/EGCorrs/external/origin_areas/origin_areas.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 1 feature and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 22.86969 ymin: 36.04912 xmax: 23.13855 ymax: 36.39421 #> Geodetic CRS:  WGS 84 plot(origin_areas)"},{"path":[]},{"path":"https://cadam00.github.io/EGCorrs/news/index.html","id":"major-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"EGCorrs 0.1.0","text":"Initial package version.","code":""}]
